[{"/Users/bsher/Documents/git/projects/kniga-bridge/src/index.js":"1","/Users/bsher/Documents/git/projects/kniga-bridge/src/App.js":"2","/Users/bsher/Documents/git/projects/kniga-bridge/src/reportWebVitals.js":"3","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Card.js":"4","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookBrowse.js":"5","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Navigation.js":"6","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookClub.js":"7","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Register.js":"8","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Login.js":"9","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookShelfPage.js":"10"},{"size":500,"mtime":1606507039658,"results":"11","hashOfConfig":"12"},{"size":974,"mtime":1611517529247,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606507039658,"results":"14","hashOfConfig":"12"},{"size":4180,"mtime":1612334903627,"results":"15","hashOfConfig":"12"},{"size":2151,"mtime":1612246035431,"results":"16","hashOfConfig":"12"},{"size":438,"mtime":1611517518000,"results":"17","hashOfConfig":"12"},{"size":1654,"mtime":1612335285235,"results":"18","hashOfConfig":"12"},{"size":2599,"mtime":1612853591865,"results":"19","hashOfConfig":"12"},{"size":1703,"mtime":1612851022163,"results":"20","hashOfConfig":"12"},{"size":1237,"mtime":1612334837218,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1v9gnuv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/bsher/Documents/git/projects/kniga-bridge/src/index.js",[],["47","48"],"/Users/bsher/Documents/git/projects/kniga-bridge/src/App.js",[],"/Users/bsher/Documents/git/projects/kniga-bridge/src/reportWebVitals.js",[],"/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Card.js",["49","50"],"import React, { useEffect, useState } from \"react\";\nimport * as Vibrant from \"node-vibrant\";\nimport axios from \"axios\";\nexport default function Card({ data, clubs, shelves }) {\n  let [shade, setShade] = useState(\"\");\n  let [showClubs, setShowClubs] = useState(false);\n  let [showShelves, setShowShelves] = useState(false);\n\n  let dataObject = {\n    bookId: data.id,\n    image: data.volumeInfo.imageLinks?.smallThumbnail,\n    title: data.volumeInfo.title,\n    searchInfo: data.searchInfo?.textSnippet,\n    description: data.volumeInfo.description,\n    pageCount: data.volumeInfo.pageCount,\n    publishDate: data.volumeInfo.publishedDate,\n    categories: data.volumeInfo.categories,\n    author: data.volumeInfo.authors,\n    bookColor: shade,\n  };\n  useEffect(() => {\n    let setUpPalette = () => {\n      if (data.volumeInfo.imageLinks) {\n        let image = data.volumeInfo.imageLinks.smallThumbnail;\n        Vibrant.from(\"https://cors-anywhere.herokuapp.com/\" + image)\n          .getPalette()\n          .then((palette) => {\n            // console.log(palette)\n            // console.log(palette.Vibrant.getHex())\n            //LightVibrant, LightMuted, Muted are good alternatives.\n            setShade(palette.Vibrant.getHex());\n          })\n          .catch((error) => {\n            // handle errors\n            console.log(error);\n          });\n      }\n    };\n    setUpPalette();\n  }, []);\n  //https://stackoverflow.com/questions/48351978/node-vibrant-package-and-react\n\n  function clickClubs() {\n    setShowClubs(true);\n    console.log(\"club data on card,\", clubs);\n  }\n\n  function addToShelves(id) {\n    dataObject.shelfId = id;\n    axios\n      .post(`http://localhost:4001/api/books/add`, dataObject, {\n        withCredentials: true,\n      })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  }\n\n  function addBookToClub(id, data) {\n    console.log(id);\n    let update = data;\n    axios\n      .put(`http://localhost:4001/api/clubs/edit/${id}`, update, {\n        withCredentials: true,\n      })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  }\n\n  let publishDate = data.volumeInfo.publishedDate;\n  let categories = data.volumeInfo.categories;\n  let searchInfo = data.searchInfo?.textSnippet || false;\n  let authors = data.volumeInfo.authors;\n  return (\n    <div className=\"card\" style={{ backgroundColor: shade }}>\n      <h1>{data.volumeInfo.title}</h1>\n      {searchInfo ? (\n        <p dangerouslySetInnerHTML={{ __html: searchInfo }} />\n      ) : (\n        <span>nothing here</span>\n      )}\n      {authors && authors.map((item) => <p>{item}</p>)}\n      <div>\n        {data.volumeInfo.imageLinks ? (\n          <img src={data.volumeInfo.imageLinks.thumbnail} />\n        ) : (\n          <h2>No image available</h2>\n        )}\n        <p>{data.volumeInfo.description}</p>\n        <p>Pages: {data.volumeInfo.pageCount}</p>\n        <p>Published {publishDate ? publishDate.slice(0, 4) : \"N/A\"}</p>\n        <div>\n          Tags:{\" \"}\n          {categories ? categories.map((item) => <p>{item}</p>) : <span></span>}\n        </div>\n      </div>\n      <div>\n        {shelves.length > 0 && (\n          <button\n            onClick={() => {\n              setShowShelves(!showShelves);\n              console.log(showShelves);\n            }}\n          >\n            Add\n          </button>\n        )}\n        {showShelves && (\n          <div>\n            {shelves.map((item) => {\n              return (\n                <p onClick={() => addToShelves(item.id)} key={item.id}>\n                  {item.title}\n                </p>\n              );\n            })}\n          </div>\n        )}\n        {clubs.length > 0 && (\n          <button onClick={clickClubs}>Add to Bookclub</button>\n        )}\n        {showClubs && (\n          <div>\n            {clubs.map((item) => {\n              return (\n                <h1\n                  onClick={() => {\n                    addBookToClub(item.id, dataObject);\n                  }}\n                  key={item.id}\n                >\n                  {item.clubName}\n                </h1>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookBrowse.js",["51","52","53","54","55","56","57"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../index.css\";\nimport Card from \"./Card\";\n\nfunction BookBrowser() {\n  const [results, setResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [words, setWords] = useState(\"\");\n  const [clubList, setClubList] = useState([]);\n  const [shelfList, setShelfList] = useState([]);\n  const [displayedData, setDisplayedData] = useState();\n  let [beginning, setBeginning] = useState(0);\n  let [offset, setOffset] = useState(10);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchTerm}&maxResults=10&key=AIzaSyBHxFwknXdd5EzjWn7dNS80jVOxzsxcrL0`\n      )\n      .then((res) => {\n        // console.log(res);\n        setResults(res.data.items);\n      })\n      .catch((err) => console.log(err));\n  }, [searchTerm]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4001/api/clubs/clubList\", {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setClubList(res.data.data);\n        console.log(\"clubs data\", clubList);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"http://localhost:4001/api/shelves/\", {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(\"shelf data\", res.data);\n        setShelfList(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleChange = (e) => {\n    // console.log(e.target.value);\n    setWords(e.target.value);\n  };\n  const submitSearch = () => {\n    setSearchTerm(words);\n  };\n  return (\n    <div>\n      <input type=\"text\" onChange={handleChange} />\n      <button onClick={submitSearch}>Search</button>\n      <div className=\"card-grid\">\n        {results.length === 0 ? (\n          <h1>Please search for a book...</h1>\n        ) : (\n          results.map((item) => {\n            return (\n              <Card\n                data={item}\n                key={item.id}\n                clubs={clubList}\n                shelves={shelfList}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BookBrowser;\n","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Navigation.js",[],"/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookClub.js",["58","59","60"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction BookClub() {\n  let [bookclub, setBookclub] = useState({\n    clubName: \"\",\n  });\n  let [clubList, setClubList] = useState([]);\n  let [book, setBook] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4001/api/clubs/clubList\", {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setClubList(res.data.data);\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //helper functions\n  const changeHandler = (e) => {\n    setBookclub({ ...bookclub, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(bookclub);\n    axios\n      .post(\"http://localhost:4001/api/clubs/add\", bookclub, {\n        withCredentials: true,\n      })\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div>\n      <h1>BookClub is here</h1>\n      <div>\n        <h2>My Clubs</h2>\n        {clubList.length > 0 ? (\n          clubList.map((item) => {\n            return (\n              <div key={item.id}>\n                <h1>{item.clubName}</h1>\n              </div>\n            );\n          })\n        ) : (\n          <h1>You have no clubs</h1>\n        )}\n      </div>\n      <div>\n        <label>Club Name</label>\n        <input\n          onChange={changeHandler}\n          name=\"clubName\"\n          value={bookclub.clubName}\n          type=\"text\"\n        />\n        <button onClick={handleSubmit}>+</button>\n      </div>\n    </div>\n  );\n}\nexport default BookClub;\n","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Register.js",[],"/Users/bsher/Documents/git/projects/kniga-bridge/src/components/Login.js",["61"],"import React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid Email\").required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n    .min(8, \"Password should be at least 8 characters\"),\n});\nfunction Login() {\n  return (\n    <div className=\"login-form\">\n      <h2>Login</h2>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={(values) => {\n          axios\n            .post(\"http://localhost:4001/api/auth/login\", values, {\n              withCredentials: true,\n            })\n            .then((data) => console.log(data))\n            .catch((err) => console.log(err));\n        }}\n        validationSchema={loginSchema}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <label htmlFor=\"email\">Email</label>\n            <Field\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"jane@email.com\"\n              // onChange={handleChange}\n            />\n            {touched.email && errors.email ? <p>{errors.email}</p> : null}\n\n            <label htmlFor=\"password\">Password</label>\n            <Field\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              // value={logData.password}\n              // onChange={handleChange}\n            />\n            {touched.password && errors.password ? (\n              <p>{errors.password}</p>\n            ) : null}\n\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/bsher/Documents/git/projects/kniga-bridge/src/components/BookShelfPage.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":40,"column":6,"nodeType":"68","endLine":40,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":84,"column":11,"nodeType":"72","endLine":84,"endColumn":61},{"ruleId":"73","severity":1,"message":"74","line":12,"column":10,"nodeType":"75","messageId":"76","endLine":12,"endColumn":23},{"ruleId":"73","severity":1,"message":"77","line":12,"column":25,"nodeType":"75","messageId":"76","endLine":12,"endColumn":41},{"ruleId":"73","severity":1,"message":"78","line":13,"column":8,"nodeType":"75","messageId":"76","endLine":13,"endColumn":17},{"ruleId":"73","severity":1,"message":"79","line":13,"column":19,"nodeType":"75","messageId":"76","endLine":13,"endColumn":31},{"ruleId":"73","severity":1,"message":"80","line":14,"column":8,"nodeType":"75","messageId":"76","endLine":14,"endColumn":14},{"ruleId":"73","severity":1,"message":"81","line":14,"column":16,"nodeType":"75","messageId":"76","endLine":14,"endColumn":25},{"ruleId":"66","severity":1,"message":"82","line":48,"column":6,"nodeType":"68","endLine":48,"endColumn":8,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"85","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":12},{"ruleId":"73","severity":1,"message":"86","line":10,"column":14,"nodeType":"75","messageId":"76","endLine":10,"endColumn":21},{"ruleId":"73","severity":1,"message":"87","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.volumeInfo.imageLinks'. Either include it or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'displayedData' is assigned a value but never used.","Identifier","unusedVar","'setDisplayedData' is assigned a value but never used.","'beginning' is assigned a value but never used.","'setBeginning' is assigned a value but never used.","'offset' is assigned a value but never used.","'setOffset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clubList'. Either include it or remove the dependency array.",["91"],"'Link' is defined but never used.","'book' is assigned a value but never used.","'setBook' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [data.volumeInfo.imageLinks]",{"range":"96","text":"97"},"Update the dependencies array to be: [clubList]",{"range":"98","text":"99"},[1387,1389],"[data.volumeInfo.imageLinks]",[1407,1409],"[clubList]"]